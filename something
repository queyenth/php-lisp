(define x 1)
(define y 2)

(define z (+ 3 4))
(define p (+ x y))

(define str "something")

(define strlen (php/strlen str))

(php/printf "%s %d\n" str (+ 1 strlen))
(php/printf "%f\n" (- 1.2 5))
(php/printf "%d\n" (- 1 5))
(php/printf "%d\n" (* 1 5))
(php/printf "%f\n" (/ 1 5))

(define ls '(1 2 3))
(php/print_r (php/array_slice ls 0 2))

(defun strlen-wrapper (str)
    (php/strlen str))

(defun abstract-len-wrapper (f x)
    (f x))

(php/printf "%d\n" (strlen-wrapper str))
(php/printf "%d\n" (abstract-len-wrapper strlen-wrapper "kappa"))
(php/printf "%d\n" (abstract-len-wrapper php/count '(1 2 3)))

(if (> 6 5) (php/printf "6 is greater than 5\n") (php/printf "5 is greater than 6\n"))
(if (< 5 6) (php/printf "6 is greater than 5\n") (php/printf "5 is greater than 6\n"))
(if (< 6 5) (php/printf "6 is greater than 5\n"))

(defun factorial (x)
    (let (previous_x (- x 1)
          is_x_1 (= x 1))
    (if is_x_1
        1
        (* x (factorial previous_x)))))

(php/printf "%d\n" (factorial 18))

(defun something (x y)
    (let (z (+ x y)) (* z z)))

(php/printf "%d\n" (something 1 3))
